/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Post
 */
export interface Post {
    /**
     * 
     * @type {number}
     * @memberof Post
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Post
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof Post
     */
    text: string;
    /**
     * 
     * @type {number}
     * @memberof Post
     */
    pipelineId: number;
    /**
     * 
     * @type {string}
     * @memberof Post
     */
    visibility: string;
    /**
     * 
     * @type {number}
     * @memberof Post
     */
    userId: number;
}

/**
 * Check if a given object implements the Post interface.
 */
export function instanceOfPost(value: object): value is Post {
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('pipelineId' in value) || value['pipelineId'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function PostFromJSON(json: any): Post {
    return PostFromJSONTyped(json, false);
}

export function PostFromJSONTyped(json: any, ignoreDiscriminator: boolean): Post {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'image': json['image'] == null ? undefined : json['image'],
        'text': json['text'],
        'pipelineId': json['pipelineId'],
        'visibility': json['visibility'],
        'userId': json['userId'],
    };
}

export function PostToJSON(json: any): Post {
    return PostToJSONTyped(json, false);
}

export function PostToJSONTyped(value?: Post | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'image': value['image'],
        'text': value['text'],
        'pipelineId': value['pipelineId'],
        'visibility': value['visibility'],
        'userId': value['userId'],
    };
}

